<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
       default-lazy-init="true">

    <description>Spring公共配置</description>

    <!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
    <context:component-scan base-package="org.eastbar.logd">
    </context:component-scan>



    <!--<bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">-->
        <!--<property name="dataSource" ref="dataSource"/>-->
        <!--<property name="jpaVendorAdapter">-->
            <!--<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>-->
        <!--</property>-->
        <!--<property name="packagesToScan" value="org.eastbar.logd.entity"/>-->
        <!--<property name="jpaProperties">-->
            <!--<props>-->
                <!--<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>-->
                <!--<prop key="hibernate.max_fetch_depth">3</prop>-->
                <!--<prop key="hibernate.jdbc.fetch_size">50</prop>-->
                <!--<prop key="hibernate.jdbc.batch_size">10</prop>-->
                <!--<prop key="hibernate.show_sql">true</prop>-->
                <!--<prop key="hibernate.hbm2ddl.auto">update</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">-->
        <!--<property name="entityManagerFactory" ref="emf"/>-->
    <!--</bean>-->

    <!--<jpa:repositories base-package="org.eastbar.logd.dao" transaction-manager-ref="transactionManager" entity-manager-factory-ref="emf"/>-->

    <!--<tx:annotation-driven transaction-manager="transactionManager"/>-->

    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <context:property-placeholder
            ignore-resource-not-found="true" location="classpath:/application-log2mq.properties"/>

    <!-- 数据源配置,使用应用内的Tomcat JDBC连接池 -->
    <!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"-->
          <!--init-method="init" destroy-method="close">-->
        <!--&lt;!&ndash; Connection Info &ndash;&gt;-->
        <!--<property name="driverClassName" value="${jdbc.driver}"/>-->
        <!--<property name="url" value="${jdbc.url}"/>-->
        <!--<property name="username" value="${jdbc.username}"/>-->
        <!--<property name="password" value="${jdbc.password}"/>-->
        <!--<property name="maxActive" value="${jdbc.pool.maxActive}"/>-->
        <!--<property name="defaultAutoCommit" value="false"/>-->
        <!--<property name="validationQuery">-->
            <!--<value>SELECT 'x'</value>-->
        <!--</property>-->
        <!--&lt;!&ndash; 连接Idle半个小时后超时，每15分钟检查一次 &ndash;&gt;-->
        <!--<property name="timeBetweenEvictionRunsMillis" value="900000"/>-->
        <!--<property name="minEvictableIdleTimeMillis" value="1800000"/>-->
    <!--</bean>-->


    <!-- 配置JMS连接工厂 -->
    <bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${activemq.url}" />
    </bean>

    <!-- 定义消息队列（Queue） -->
    <bean id="prgQueueDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <!-- 设置消息队列的名字 -->
        <constructor-arg>
            <value>prgLog</value>
        </constructor-arg>
    </bean>

    <!-- 定义消息队列（Queue） -->
    <bean id="urlQueueDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <!-- 设置消息队列的名字 -->
        <constructor-arg>
            <value>urlLog</value>
        </constructor-arg>
    </bean>

    <!-- 定义消息队列（Queue） -->
    <bean id="emailQueueDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <!-- 设置消息队列的名字 -->
        <constructor-arg>
            <value>emailLog</value>
        </constructor-arg>
    </bean>

    <!-- 定义消息队列（Queue） -->
    <bean id="instmsgQueueDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <!-- 设置消息队列的名字 -->
        <constructor-arg>
            <value>instLog</value>
        </constructor-arg>
    </bean>

    <!-- 定义消息队列（Queue） -->
    <bean id="illegalQueueDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <!-- 设置消息队列的名字 -->
        <constructor-arg>
            <value>illegalLog</value>
        </constructor-arg>
    </bean>

    <!-- 配置JMS模板（Queue），Spring提供的JMS工具类，它发送、接收消息。 -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="receiveTimeout" value="10000" />
    </bean>



</beans>