<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd"
	default-lazy-init="true">

	<description>Spring公共配置</description>

	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="org.eastbar.center">
	</context:component-scan>



	<context:property-placeholder
		ignore-resource-not-found="true" location="classpath*:/application-center.properties" />


	<!-- 调用StopWatch计时的Interceptor -->
	<bean id="monitoringInterceptor" class="org.javasimon.spring.MonitoringInterceptor" />

	<!-- 监控定义了@Monitored的方法 -->
	<bean id="monitoringAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice" ref="monitoringInterceptor" />
		<property name="pointcut">
			<bean class="org.javasimon.spring.MonitoredMeasuringPointcut" />
		</property>
	</bean>
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
		<property name="proxyTargetClass" value="true" />
	</bean>
	
	<!-- 异步线程池 -->
	<bean id="threadPool" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">  
    <!-- 核心线程数  -->
		<property name="corePoolSize" value="${threadPool.corePoolSize}" />  
    <!-- 最大线程数 -->
		<property name="maxPoolSize" value="${threadPool.maxPoolSize}" />  
    <!-- 队列最大长度 >=mainExecutor.maxSize -->
		<property name="queueCapacity" value="${threadPool.queueCapacity}" />  
    <!-- 线程池维护线程所允许的空闲时间 -->
		<property name="keepAliveSeconds" value="${threadPool.keepAliveSeconds}" />  
    <!-- 线程池对拒绝任务(无线程可用)的处理策略 -->
		<property name="rejectedExecutionHandler">
			<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
		</property>
	</bean>
	

</beans>