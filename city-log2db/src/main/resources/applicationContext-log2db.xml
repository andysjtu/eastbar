<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
       default-lazy-init="true">

    <description>Spring公共配置</description>

    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <context:component-scan base-package="org.eastbar.log2db">
    </context:component-scan>

    <context:property-placeholder
            ignore-resource-not-found="true" location="classpath:/application-log2db.properties"/>

    <!-- 数据源配置,使用应用内的Tomcat JDBC连接池 -->
    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
          destroy-method="close">
        <!-- Connection Info -->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="defaultAutoCommit" value="false"/>
        <!-- 连接Idle半个小时后超时，每15分钟检查一次 -->
        <property name="timeBetweenEvictionRunsMillis" value="900000"/>
        <property name="minEvictableIdleTimeMillis" value="1800000"/>
    </bean>

    <!-- MyBatis配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
        <property name="typeAliasesPackage" value="org.eastbar.log2db.entity"/>
        <!-- 显式指定Mapper文件位置 -->
        <property name="mapperLocations" value="classpath:/mybatis/orcale/*Mapper.xml"/>
    </bean>
    <!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="org.eastbar.log2db.dao"/>
        <property name="annotationClass"
                  value="org.eastbar.log2db.dao.MyBatisRepository"/>
    </bean>

    <!-- 配置事务管理 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <!-- 配置JMS连接工厂 -->
    <bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${activemq.url}"/>
    </bean>

    <!-- 定义消息队列（Queue） -->
    <bean id="prgQueueDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <!-- 设置消息队列的名字 -->
        <constructor-arg>
            <value>prgLog</value>
        </constructor-arg>
    </bean>

    <!-- 定义消息队列（Queue） -->
    <bean id="urlQueueDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <!-- 设置消息队列的名字 -->
        <constructor-arg>
            <value>urlLog</value>
        </constructor-arg>
    </bean>

    <!-- 定义消息队列（Queue） -->
    <bean id="emailQueueDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <!-- 设置消息队列的名字 -->
        <constructor-arg>
            <value>emailLog</value>
        </constructor-arg>
    </bean>

    <!-- 定义消息队列（Queue） -->
    <bean id="instQueueDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <!-- 设置消息队列的名字 -->
        <constructor-arg>
            <value>instLog</value>
        </constructor-arg>
    </bean>

    <!-- 定义消息队列（Queue） -->
    <bean id="illegalQueueDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <!-- 设置消息队列的名字 -->
        <constructor-arg>
            <value>illegalLog</value>
        </constructor-arg>
    </bean>

    <!-- 配置JMS模板（Queue），Spring提供的JMS工具类，它发送、接收消息。 -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="receiveTimeout" value="10000"/>
    </bean>

    <bean id="urlQueueConsumer" class="org.eastbar.log2db.SiteUrlLogMsgRcvr">
        <property name="logService" ref="logService"/>
    </bean>

    <bean id="prgQueueConsumer" class="org.eastbar.log2db.SitePrgLogMsgRcvr">
        <property name="logService" ref="logService"/>
    </bean>

    <bean id="instQueueConsumer" class="org.eastbar.log2db.SiteInstMsgLogMsgRcvr">
        <property name="logService" ref="logService"/>
    </bean>

    <bean id="illegalQueueConsumer" class="org.eastbar.log2db.SiteIllegalMsgLogMsgRcvr">
        <property name="logService" ref="logService"/>
    </bean>

    <bean id="emailQueueConsumer" class="org.eastbar.log2db.SiteEmailMsgLogMsgRcvr">
        <property name="logService" ref="logService"/>
    </bean>


    <bean id="urlQueueListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="destination" ref="urlQueueDestination"/>
        <property name="messageListener" ref="urlQueueConsumer"/>
        <property name="concurrentConsumers" value="${threadNum}"/>
    </bean>

    <bean id="prgQueueListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="destination" ref="prgQueueDestination"/>
        <property name="messageListener" ref="prgQueueConsumer"/>
        <property name="concurrentConsumers" value="${threadNum}"/>
    </bean>


    <bean id="illegalQueueListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="destination" ref="illegalQueueDestination"/>
        <property name="messageListener" ref="illegalQueueConsumer"/>
        <property name="concurrentConsumers" value="${threadNum}"/>
    </bean>

    <bean id="emailQueueListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="destination" ref="emailQueueDestination"/>
        <property name="messageListener" ref="emailQueueConsumer"/>
        <property name="concurrentConsumers" value="${threadNum}"/>
    </bean>

    <bean id="xxQueueListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="destination" ref="instQueueDestination"/>
        <property name="messageListener" ref="instQueueConsumer"/>
        <property name="concurrentConsumers" value="${threadNum}"/>
    </bean>


</beans>